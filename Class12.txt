#include<iostream>
#include<vector>
#include<iterator>
using namespace std;

 
template <class T>
T getHighestElement(vector<T> &vec, T &sizeOfVec,T &highestElement) {
	 
    for(int i=0;i<sizeOfVec;i++){ 
    	if(highestElement<vec[i]){
    		highestElement=vec[i];
		}
	}
	return highestElement;
	 
	
}
  
 
int main() {
 
    vector<int> vec;
    vec.push_back(4);
    vec.push_back(5);
    vec.push_back(7);
    vec.push_back(59);
    vec.push_back(1);
    vec.push_back(10);
    vec.push_back(19);
    vec.insert(vec.begin()+2,30);
   
    int sizeOfVec=vec.size();
    int highestElement=vec[0];
  	getHighestElement<int>(vec, sizeOfVec,highestElement);
    
    cout<<"Highest element is "<<highestElement<<endl;
    cout<<"-------------------------------------"<<endl;
      for(int j=0;j<sizeOfVec;j++){
    	cout<<"Elements  of vector before erasing:"<<vec[j]<<endl;
	}
	cout<<"-------------------------------------"<<endl;
    vec.erase(vec.begin(),vec.begin()+3);
    for(int j=0;j<vec.size();j++){
    	cout<<"Elements  of vector after erasing:"<<vec[j]<<endl;
	}
}